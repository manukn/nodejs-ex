{"version":3,"sources":["api/order/order.controller.js"],"names":["company","employee","myOrders","index","show","newcontact","create","count","update","destroy","config","email","orderPlaced","res","statusCode","req","body","to","name","message","mobile","send","mailOptions","entity","status","json","respondWithResult","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","handleEntityNotFound","handleError","err","find","exec","catch","userID","user","_id","toString","items","emp","orders","findById","params","id","query","q","isJson","where","$set","multi","cart"],"mappings":"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","file":"order.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/orders              ->  index\n * POST    /api/orders              ->  create\n * GET     /api/orders/:id          ->  show\n * PUT     /api/orders/:id          ->  update\n * DELETE  /api/orders/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Order from './order.model';\nimport * as config from '../../config/environment/shared'\nimport * as email from '../sendmail/send'\nimport Contact from '../contactus/contact.model';\n\nfunction orderPlaced(res, statusCode) {\n  res.req.body.to = res.req.body.email;\n  res.req.body.name = res.req.body.name\n  res.req.body.message=res.req.body.message;\n  res.req.body.mobile=res.req.body.mobile;\n  email.send(config.mailOptions.orderPlaced(res.req.body))\n  \n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n/**\n * Get services company\n */\nexport function company(req,res)\n{\n \n  return Order.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n/**\n * Get services employee\n */\nexport function employee(req,res)\n{\n  var userID=req.user._id;\n      userID=userID.toString();\n    //5818c9c7f505b51e8c3af63c\n  Order.find(\n      { items: { \"$elemMatch\": { emp: userID } } } \n    ,function (err, orders) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(orders);\n  });\n}\n// Get all orders by a user\nexport function myOrders(req, res) {\n  Order.find({email : req.user.email},function (err, orders) {\n    if(err) { return handleError(res, err); }\n    return res.status(200).json(orders);\n  });\n}\n\n// Gets a list of Orders\nexport function index(req, res) {\n  return Order.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Order from the DB\nexport function show(req, res) {\n  return Order.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n// Creates a new Contact in the DB\nexport function newcontact(req, res) {\n  return Contact.create(req.body)\n    .then(orderPlaced(res, 201))\n    .catch(handleError(res));\n}\n// Creates a new Order in the DB\nexport function create(req, res) {\n  \n  return Order.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n  \n}\n// Get all features group count\nexport  function count(req, res) {\n  if(req.query){\n    var q = isJson(req.query.where);\n    Order.find(q).count().exec(function (err, count) {\n      if(err) { return handleError(res, err); }\n      return res.status(200).json([{count:count}]);\n    });\n  }\n}\n\n// Updates an existing Order in the DB\nexport function update(req, res) {\n   \n\n   Order.update(\n    {_id:req.params.id},\n    {$set:req.body},\n    {multi:true}\n    ,function (err, cart) {\n    if (err) { return handleError(res, err); }\n    else {\n      return res.status(200).json(cart);\n    }\n  });\n\n}\n\n// Deletes a Order from the DB\nexport function destroy(req, res) {\n  return Order.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}