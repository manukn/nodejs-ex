{"version":3,"sources":["api/user/user.controller.js"],"names":["reset","forgot","index","price_company","company","users","employee","create","show","update","destroy","changePassword","updateCompany","updateServices","updateUser","me","authCallback","sgTransport","require","validationError","res","statusCode","err","status","json","handleError","send","respondWithResult","entity","saveUpdates","updates","updated","merge","saveAsync","spread","handleEntityNotFound","end","req","waterfall","done","findOne","resetPasswordToken","params","token","resetPasswordExpires","$gt","Date","now","user","password","body","undefined","then","options","auth","api_key","process","env","SENDGRID_APIKEY","mailer","createTransport","mailOptions","to","email","from","subject","text","sendMail","catch","next","randomBytes","buf","toString","save","headers","host","find","exec","services","role","_id","newUser","provider","count","cc","id","sign","secrets","session","expiresIn","userId","findById","profile","findByIdAsync","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","name","paid_status","paid_plan","contacts","formData","$set","multi","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\r\n\r\nimport User from './user.model';\r\nimport passport from 'passport';\r\nimport config from '../../config/environment';\r\nimport jwt from 'jsonwebtoken';\r\nimport async from 'async';\r\nimport crypto from 'crypto';\r\nimport nodemailer from 'nodemailer';\r\nvar sgTransport = require('nodemailer-sendgrid-transport');\r\nimport _ from 'lodash';\r\n\r\n\r\nfunction validationError(res, statusCode) {\r\n  statusCode = statusCode || 422;\r\n  return function(err) {\r\n    res.status(statusCode).json(err);\r\n  }\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    \r\n    return updated.saveAsync()\r\n      .spread(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\n// Reset password route\r\nexport function reset(req, res) {\r\n  async.waterfall([\r\n    function(done) {\r\n      User.findOne({ resetPasswordToken: req.params.token, resetPasswordExpires: { $gt: Date.now() } }, function(err, user) {\r\n        if (!user) {\r\n          return res.status(422).json({'message': 'Password reset token is invalid or has expired.'});\r\n        }\r\n\r\n        user.password = req.body.password;\r\n        user.resetPasswordToken = undefined;\r\n        user.resetPasswordExpires = undefined;\r\n        user.saveAsync()\r\n          .then(() => {\r\n            // res.status(204).end();\r\n              // console.log('next async', done);\r\n              // username + password\r\n              var options = {\r\n                  auth: {\r\n                    //   api_user: process.env.SENDGRID_USERNAME,\r\n                    //   api_key: process.env.SENDGRID_PASSWORD\r\n                         api_key: process.env.SENDGRID_APIKEY\r\n\r\n                  }\r\n              }\r\n\r\n              var mailer = nodemailer.createTransport(sgTransport(options));\r\n            //   var mailer = nodemailer.createTransport('smtps://'+process.env.EMAIL_ID+':'+process.env.EMAIL_PASSWORD+'@smtp.gmail.com');\r\n\r\n\r\n              var mailOptions = {\r\n                to: user.email,\r\n                from: 'passwordreset@qtofacility.com',\r\n                subject: 'Your password has been changed',\r\n                text: 'Hello,\\n\\n' +\r\n                  'This is a confirmation that the password for your account ' + user.email + ' has just been changed.\\n'\r\n              };\r\n              mailer.sendMail(mailOptions, function(err) {\r\n                return res.status(200).json({'message': 'Success! Your password has been changed.'});\r\n              });\r\n          })\r\n          .catch(validationError(res));\r\n\r\n        // user.save(function(err) {\r\n\r\n          // return res.status(200);\r\n          // req.logIn(user, function(err) {\r\n          //   console.log('save err', err);\r\n          // });\r\n        // });\r\n      });\r\n    }\r\n  ], function(err) {\r\n    if (err) return next(err);\r\n  });\r\n}\r\n\r\n// Forgot password route\r\nexport function forgot(req, res, next) {\r\n  async.waterfall([\r\n    function(done) {\r\n      crypto.randomBytes(20, function(err, buf) {\r\n        var token = buf.toString('hex');\r\n        done(err, token);\r\n      });\r\n    },\r\n    function(token, done) {\r\n      User.findOne({ email: req.body.email })\r\n      .then(user => {\r\n    //   var newUser = new User(user);\r\n        // user = user.toObject();\r\n        if (!user) {\r\n          return res.status(422).json({'message': ' No account with that email address exists.'});\r\n        }\r\n        user.resetPasswordToken = token;\r\n        user.resetPasswordExpires = Date.now() + 3600000; // 1 hour\r\n\r\n        user.save(function(err) {\r\n          done(err, token, user);\r\n        });\r\n      });\r\n    },\r\n    function(token, user, done) {\r\n      // username + password\r\n      var options = {\r\n          auth: {\r\n            //   api_user: process.env.SENDGRID_USERNAME,\r\n            //   api_key: process.env.SENDGRID_PASSWORD\r\n                 api_key: process.env.SENDGRID_APIKEY\r\n\r\n          }\r\n      }\r\n\r\n      var mailer = nodemailer.createTransport(sgTransport(options));\r\n    //   var mailer = nodemailer.createTransport('smtps://'+process.env.EMAIL_ID+':'+process.env.EMAIL_PASSWORD+'@smtp.gmail.com');\r\n\r\n      var mailOptions = {\r\n        to: user.email,\r\n        from: 'info@qtofacility.com',\r\n        subject: ' Password Reset',\r\n        text: 'You are receiving this because you (or someone else) have requested the reset of the password for your account.\\n\\n' +\r\n          'Please click on the following link, or paste this into your browser to complete the process:\\n\\n' +\r\n          'http://' + req.headers.host + '/reset/' + token + '\\n\\n' +\r\n          'If you did not request this, please ignore this email and your password will remain unchanged.\\n'\r\n      };\r\n      mailer.sendMail(mailOptions, function(err) {\r\n        return res.status(201).json({'message': 'An e-mail has been sent to ' + user.email + ' with further instructions.'});\r\n      });\r\n    }\r\n  ], function(err) {\r\n    if (err) return next(err);\r\n  });\r\n}\r\n\r\n/**\r\n * Get list of users\r\n * restriction: 'admin'\r\n */\r\nexport function index(req, res) {\r\n  return User.find({}, '-salt -password').exec()\r\n    .then(users => {\r\n      res.status(200).json(users);\r\n    })\r\n    .catch(handleError(res));\r\n}\r\n/**\r\n * Get services company\r\n */\r\nexport function price_company(req,res)\r\n{\r\n\r\n  return User.find(\r\n      {\"$and\":\r\n      \r\n      [\r\n          {\"services._id\":{\"$all\":req.body.services}},\r\n          {\"paid_status\": {\"$exists\": true }},\r\n          {\"active\":true }\r\n      ]\r\n      \r\n      }, '-salt -password').exec()\r\n    .then(users => {\r\n\r\n      res.status(200).json(users);\r\n    })\r\n    .catch(handleError(res));\r\n}\r\n/**\r\n * Get list of company\r\n */\r\n export function company(req,res)\r\n {\r\n   return User.find({role:\"company\",\"active\":true}, '-salt -password').exec()\r\n     .then(users => {\r\n       res.status(200).json(users);\r\n     })\r\n     .catch(handleError(res))\r\n }\r\n /**\r\n * Get list of company\r\n */\r\n export function users(req,res)\r\n {\r\n   return User.find({role:\"user\",\"active\":true}, '-salt -password').exec()\r\n     .then(users => {\r\n       res.status(200).json(users);\r\n     })\r\n     .catch(handleError(res))\r\n }\r\n /**\r\n  * Get list of company employee\r\n  */\r\n  export function employee(req,res)\r\n  {\r\n    return User.find({\"$and\":\r\n        [{role:\"employee\"},{company:req.user._id}]\r\n        }, '-salt -password').exec()\r\n      .then(users => {\r\n        res.status(200).json(users);\r\n      })\r\n      .catch(handleError(res))\r\n  }\r\n/**\r\n * Creates a new user\r\n */\r\nexport function create(req, res, next) {\r\n  var newUser = new User(req.body);\r\n  newUser.provider = 'local';\r\n  var count=0;\r\n    User.find({role:\"user\"}).count().exec(function(err,cc){\r\n        count=cc+1;\r\n  if(newUser.role==\"company\" || newUser.role==\"employee\")\r\n  {\r\n    newUser.role==newUser.role;\r\n  }\r\n  else\r\n  {\r\n  newUser.role = 'user';\r\n  newUser.id=1000+count;\r\n  }\r\n  newUser.save()\r\n    .then(function(user) {\r\n\t\tif(newUser.role=='user')\r\n\t\t{\r\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\r\n        expiresIn: 60 * 60 * 5\r\n      });\r\n      res.json({ token });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// email start\r\n\t  var options = {\r\n          auth: {\r\n            //   api_user: process.env.SENDGRID_USERNAME,\r\n            //   api_key: process.env.SENDGRID_PASSWORD\r\n                 api_key: process.env.SENDGRID_APIKEY\r\n\r\n          }\r\n      }\r\n\r\n      var mailer = nodemailer.createTransport(sgTransport(options));\r\n    //   var mailer = nodemailer.createTransport('smtps://'+process.env.EMAIL_ID+':'+process.env.EMAIL_PASSWORD+'@smtp.gmail.com');\r\n\r\n      var mailOptions = {\r\n        to: newUser.email,\r\n        from: 'info@qtofacility.com',\r\n        subject: 'New Account created',\r\n        text: 'You are receiving this because you  have requested  for your account.\\n\\n' +\r\n          'Please click on the following link, or paste this into your browser to complete the process:\\n\\n' +\r\n          'http://' + req.headers.host + '/login\\n\\n' +\r\n\t\t  'Your email ' + newUser.email + ' \\n\\n' +\r\n\t\t  'Your password ' + newUser.password + ' \\n\\n' +\r\n          'If you did not request this, please ignore.\\n'\r\n      };\r\n      mailer.sendMail(mailOptions, function(err) {\r\n         res.json({'message': 'An e-mail has been sent to ' + newUser.email + ' with further instructions.'});\r\n      });\r\n    // email end\r\n\t\t}\r\n    })\r\n    .catch(validationError(res));\r\n   })\r\n}\r\n\r\n/**\r\n * Get a single user\r\n */\r\nexport function show(req, res, next) {\r\n  var userId = req.params.id;\r\n\r\n  return User.findById(userId).exec()\r\n    .then(user => {\r\n      if (!user) {\r\n        return res.status(404).end();\r\n      }\r\n      res.json(user.profile);\r\n    })\r\n    .catch(err => next(err));\r\n}\r\n\r\n// Updates an existing Thing in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  \r\n  User.findByIdAsync(req.params.id)\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n/**\r\n * Deletes a user\r\n * restriction: 'admin'\r\n */\r\nexport function destroy(req, res) {\r\n  return User.findByIdAndRemove(req.params.id).exec()\r\n    .then(function() {\r\n      res.status(204).end();\r\n    })\r\n    .catch(handleError(res));\r\n}\r\n\r\n/**\r\n * Change a users password\r\n */\r\nexport function changePassword(req, res, next) {\r\n  var userId = req.user._id;\r\n  var oldPass = String(req.body.oldPassword);\r\n  var newPass = String(req.body.newPassword);\r\n\r\n  return User.findById(userId).exec()\r\n    .then(user => {\r\n      if (user.authenticate(oldPass)) {\r\n        user.password = newPass;\r\n        return user.save()\r\n          .then(() => {\r\n            res.status(204).end();\r\n          })\r\n          .catch(validationError(res));\r\n      } else {\r\n        return res.status(403).end();\r\n      }\r\n    });\r\n}\r\n    /**\r\n * Change a company services \r\n */\r\nexport function updateCompany(req, res, next) {\r\n  var userId = req.params.id;\r\n return User.findById(userId).exec()\r\n    .then(user => {\r\n       user.name= req.body.name;\r\n       user.email= req.body.email;\r\n       user.paid_status=req.body.paid_status;\r\n       user.paid_plan=req.body.paid_plan;\r\n       user.contacts=req.body.contacts;\r\n       user.services=req.body.services;\r\n       return user.save()\r\n        .then(() => {\r\n        res.status(204).end();\r\n          })\r\n          .catch(validationError(res));\r\n\r\n    });\r\n}\r\n/**\r\n * Change a users services price\r\n */\r\nexport function updateServices(req, res, next) {\r\n  var userId = req.user;\r\n return User.findById(userId).exec()\r\n    .then(user => {\r\n       user.services = req.body.services;\r\n        return user.save()\r\n        .then(() => {\r\n           res.status(200).json(user);\r\n         \r\n          })\r\n          .catch(validationError(res));\r\n\r\n    });\r\n}\r\n/**\r\n * Change a users services price\r\n */\r\nexport function updateUser(req, res, next) {\r\n  \r\n  User.update(\r\n     {_id:req.body.formData._id},\r\n     {$set:req.body.formData},\r\n     {multi:true},\r\n     function(err,user)\r\n     {\r\n         \r\n       if(err)\r\n        return validationError(res);\r\n        else\r\n        return res.status(200).json(user);\r\n        \r\n    });\r\n}\r\n/**\r\n * Get my info\r\n */\r\nexport function me(req, res, next) {\r\n  var userId = req.user._id;\r\n\r\n  return User.findOne({ _id: userId }, '-salt -password').exec()\r\n    .then(user => { // don't ever give out the password or salt\r\n      if (!user) {\r\n        return res.status(401).end();\r\n      }\r\n      res.json(user);\r\n    })\r\n    .catch(err => next(err));\r\n}\r\n\r\n/**\r\n * Authentication callback\r\n */\r\nexport function authCallback(req, res, next) {\r\n  res.redirect('/');\r\n}\r\n"]}